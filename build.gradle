buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
	maven { url  = 'https://plugins.gradle.org/m2/' }
        jcenter()
        mavenCentral()
        gradlePluginPortal()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath "com.modrinth.minotaur:Minotaur:2.1.2"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: "com.modrinth.minotaur"

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

version = "1.0.0"
group = "mod.azure.tinycoal"
archivesBaseName = "Tiny-Coal-1.18.2"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            mods {
                tinycoal {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            mods {
                tinycoal {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            args '--mod', 'tinycoal', '--all', '--output', file('src/generated/resources/')
            mods {
                tinycoal {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
	jcenter()
	maven {
        name = "jitpack"
        url "https://jitpack.io"
    }
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.19'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "tinycoal",
            "Specification-Vendor": "tinycoalsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"tinycoalsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar') 

processResources {
	doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

curseforge {

    def curseProp = new Properties()
    File secretPropsFile = file("key.properties")
    curseProp.load(secretPropsFile.newInputStream())

    project {
        apiKey = curseProp.getProperty('curseKey')
        id = "395272"
        releaseType = "release"
        changelogType = 'text'
        changelog = file('CHANGELOG.txt')
        addGameVersion("1.18.2")
        addGameVersion("Forge")
        addGameVersion("Java 8")
    }
}

if (file('key.properties').exists()) {
	modrinth {
		def modrinthProp = new Properties()
		File secretPropsFile = file("key.properties")
		modrinthProp.load(secretPropsFile.newInputStream())
		
		token = modrinthProp.getProperty('modrinthKey')
		projectId = 'TODO' 
		versionNumber = project.mod_version 
		versionName = 'Forge 1.18.2'
		uploadFile = jar 
		changelog = rootProject.file("changelog.txt").text
		gameVersions = ['1.18.2']
		loaders = ['forge']
	}
}
